import board
import neopixel
import time
from digitalio import DigitalInOut, Direction, Pull

#function to check what light mode it is on
def checkMode(count):    
    #first mode: off
    if count == 0:
        pixels.fill((0, 0, 0, 0))
        
    #second mode: all blueish white
    if count == 1:
        for n in range(32):
            pixels[n] = (0, 0, 255, 200)
    
    #third mode: all red
    if count == 2:
        for n in range(32):
            pixels[n] = (255, 0, 0, 0)
        
    #fourth mode: flashing red
    if count == 3:
        buttonFlag1 = True
        while buttonFlag1 == True:
            pixels.fill((255, 0, 0, 0))
            if not buttonCycle.value:
                buttonFlag1 = False
                break
            time.sleep(0.1)
            if not buttonCycle.value:
                buttonFlag1 = False
                break
            pixels.fill((0, 0, 0, 0))
            if not buttonCycle.value:
                buttonFlag1 = False
                break
        
    #fifth mode: pulse red
    if count == 4:
        buttonFlag2 = True
        while buttonFlag2 == True:
            pixels.fill((0, 0, 0, 0))
            if not buttonCycle.value:
                buttonFlag2 = False
                break
            colorValue = 0
            if not buttonCycle.value:
                buttonFlag2 = False
                break
            for n in range(17):
                colorValue += 15
                if not buttonCycle.value:
                    buttonFlag2 = False
                    break
                pixels.fill((colorValue, 0, 0, 0))
                if not buttonCycle.value:
                    buttonFlag2 = False
                    break
                time.sleep(0.005)
            if not buttonCycle.value:
                buttonFlag2 = False
                break
            for n in range(17):
                colorValue -= 15
                if not buttonCycle.value:
                    buttonFlag2 = False
                    break
                pixels.fill((colorValue, 0, 0, 0))
                if not buttonCycle.value:
                    buttonFlag2 = False
                    break
                time.sleep(0.005)
            if not buttonCycle.value:
                buttonFlag2 = False
                break

#initialize pixels
pixels = neopixel.NeoPixel(board.D1, 32, bpp=4, brightness=0.2)
#initialize button/button count
buttonCycle = DigitalInOut(board.D3)
buttonCycle.direction = Direction.INPUT
buttonCycle.pull = Pull.UP
buttonCount = 0
# set first mode
pixels.fill((0, 0, 0, 0))

while True:
    # when button is pressed
    if not buttonCycle.value:
        # between 0 and 2, set single colored lights
        if 0 <= buttonCount <=1:
            buttonCount += 1
            checkMode(buttonCount)
        # for 3, need to 
        elif buttonCount == 2:
            buttonCount = 3
            checkMode(3)
            # button press is checked inside function
            buttonCount = 4
            # check mode for 4
            checkMode(4)
            # button press is checked inside function
            buttonCount = 0
            checkMode(0)
